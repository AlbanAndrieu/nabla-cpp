sonar.projectKey=MICROSOFT:master
sonar.projectName=MICROSOFT C++
sonar.projectVersion=1.0.1-SNAPSHOT

sonar.sources=./sample/microsoft/src/main,./sample/microsoft/src/test
sonar.binaries=./target/bin/,/./target/lib
sonar.exclusions=sample/build-*/**, test/**

sonar.java.binaries=./target/classes
#sonar.java.libraries=

sonar.java.source=1.8
sonar.java.target=1.8

sonar.global.exclusions=**/generated/**

#----- Default source code encoding
sonar.sourceEncoding=UTF-8

#See https://github.com/SonarOpenCommunity/sonar-cxx/wiki/Running-the-analysis for community plugin, check sonar.cxx.* variable
#sonar.language=c++ // using community plugin
#See https://www.sonarsource.com/products/codeanalyzers/sonarcfamilyforcpp.html for commercial plugin, check  sonar.cfamily.* sonar.c.* sonar.cpp.* variable
#sonar.language=C++ // using commercial plugin

#----- Default Sonar server
sonar.links.homepage=https://github.com/AlbanAndrieu/nabla-cpp
sonar.links.ci=https://travis-ci.org/AlbanAndrieu/nabla-cpp
sonar.links.scm=https://github.com/AlbanAndrieu/nabla-cpp
sonar.links.issue=https://github.com/AlbanAndrieu/nabla-cpp/issues

sonar.host.url=https://sonarcloud.io
sonar.login=818224bf27cc74d98389c3d5c567e58ea7e058eb
sonar.organization=albanandrieu-github

sonar.github.repository=AlbanAndrieu/nabla-cpp

#----- SCM
#sonar.scm.url=scm:cvs:pserver:nabla@nabla.mobi
#sonar.scm.url=scm:svn:http://alban.googlecode.com/svn/trunk/cpp
sonar.scm.url=scm:git:https://github.com/AlbanAndrieu/nabla-cpp.git

#----- Security (when 'sonar.forceAuthentication' is set to 'true')
#sonar.login=admin
#sonar.password=admin

sonar.verbose=true

#Means commercial rules are in cpp:... and community in cxx:... repository
#community plugins
#sonar.lang.patterns.c++=**/*.cxx,**/*.cpp,**/*.cc,**/*.hxx,**/*.hpp,**/*.hh
#cfamily plugins
#sonar.lang.patterns.cpp=**/*cpp.TODO
#sonar.lang.patterns.c=**/*.c,**/*.h
#sonar.lang.patterns.objectivec=**/*.m
#sonar.lang.patterns.objc=**/*.m
#cfamily plugins
sonar.c.file.suffixes=.c,.h
sonar.cpp.file.suffixes=.cc,.cpp,.cxx,.c++,.hh,.hpp,.hxx,.h++,.ipp
#TOD below to switch to objc
#sonar.c.file.suffixes=
#sonar.objc.file.suffixes=.h,.m

#sonar.cfamily.build-wrapper-output.bypass=true
# The build-wrapper output dir
sonar.cfamily.build-wrapper-output=bw-outputs
#build-wrapper --out-dir bw-outputs scons
#sonar.cfamily.cppunit.reportsPath=${WORKSPACE}/sample/build-linux/Test.xml
sonar.cfamily.cppunit.reportsPath=${WORKSPACE}/sample/build-linux/
#sonar.cfamily.cppunit.reportsPath=${WORKSPACE}/sample/build-linux/Testing/JUnitTestResults.xml
sonar.cfamily.gcov.reportsPath=*.gcov
#sonar.cfamily.gcov.reportsPath=${WORKSPACE}/reports/
sonar.cfamily.threads=8

#Community plugins
sonar.cxx.includeDirectories=include,/usr/include
#sonar.cxx.includeDirectories=/usr/include/c++/9,/usr/include/i386-linux-gnu/c++/9,/usr/include,/usr/include/c++/9/tr1,/usr/include/linux,src
sonar.cxx.defines=NDEBUG "" \n\
linux ""       \n\
DEBUG 1

sonar.cxx.cppcheck.reportPath=${WORKSPACE}/reports/cppcheck-result.xml
sonar.cxx.rats.reportPath=${WORKSPACE}/reports/rats-result.xml
sonar.cxx.valgrind.reportPath=${WORKSPACE}/reports/valgrind-report.xml
sonar.cxx.vera.reportPath=${WORKSPACE}/reports/vera++-report.xml
#sonar.cxx.drmemory.reportPath
#sonar.cxx.vstest.reportsPaths
#sonar.cxx.nunit.reportsPaths
#sonar.cxx.xunit.reportsPaths
#sonar.cxx.xunit.reportPath=sonar/xunit-reports/xunit-reports.xml
sonar.cxx.xunit.reportPath=${WORKSPACE}/sample/build-linux/Testing/JUnitTestResults.xml
#sonar.cxx.xunit.xsltURL
sonar.cxx.xunit.provideDetails=True
#sonar.cxx.pclint.reportPath=build/pclint-report.xml
#sonar.cxx.other.reportPath
sonar.cxx.coverage.forceZeroCoverage=True
#sonar.cxx.coverage.reportPath=coverage.info
#sonar.cxx.coverage.reportPath=*.gcov
sonar.cxx.coverage.reportPath=${WORKSPACE}/reports/gcovr-report*.xml
#sonar.cxx.coverage.itReportPath
#sonar.cxx.coverage.overallReportPath

#Used to disable c++ Community plugin - which is used on a different project
#sonar.cxx.suffixes.sources=cxx
#sonar.cxx.suffixes.headers=hxx

sonar.cxx.compiler.parser=GCC
sonar.cxx.compiler.reportPath=build.log
#sonar.cxx.compiler.reportPath=*.log
sonar.cxx.compiler.charset=UTF-8
#sonar.cxx.compiler.regex=^(.):([0-9]+):[0-9]+: warning: (.)[(.*)]$
sonar.cxx.compiler.regex=^(.*):(\\d+): warning: (.*)\\[(.*)\\]$

# Xcode project configuration (.xcodeproj or .xcworkspace)
# -> If you have a project: configure only sonar.objectivec.project
# -> If you have a workspace: configure sonar.objectivec.workspace and sonar.objectivec.project
# and use the later to specify which project(s) to include in the analysis (comma separated list)
sonar.objectivec.project=myApplication.xcodeproj
# sonar.objectivec.workspace=myApplication.xcworkspace

# Scheme to build your application
sonar.objectivec.appScheme=myApplication
# Scheme to build and run your tests (comment following line of you don't have any tests)
sonar.objectivec.testScheme=myApplicationTests

# Cobertura report generated by run-sonar.sh is stored in sonar-reports/coverage.xml
# Change it only if you generate the file on your own
# sonar.objectivec.coverage.reportPattern=sonar-reports/coverage*.xml

# OCLint report generated by run-sonar.sh is stored in sonar-reports/oclint.xml
# Change it only if you generate the file on your own
# sonar.objectivec.oclint.report=sonar-reports/oclint.xml

# Paths to exclude from coverage report (tests, 3rd party libraries etc.)
# sonar.objectivec.excludedPathsFromCoverage=pattern1,pattern2
sonar.objectivec.excludedPathsFromCoverage=.*Tests.*

sonar.dependencyCheck.reportPath=${WORKSPACE}/dependency-check-report.xml
sonar.dependencyCheck.htmlReportPath=${WORKSPACE}/dependency-check-report.html

checkmarx.server.url=https://checkmarx
checkmarx.server.username=nabla
checkmarx.server.password=microsoft
checkmarx.server.project_name=NABLA_Checkmarx

sonar.zaproxy.reportPath=${WORKSPACE}/zaproxy-report.xml
# Optional - specifies additional rules outside of what's included in the core
#sonar.zaproxy.rulesFilePath=${WORKSPACE}/myrules.xml
